name: Tests

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  tests:
    name: PHP Tests
    runs-on: ubuntu-latest
    environment: Testing

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          tools: composer:v2
          coverage: xdebug

      - name: Configure Composer auth
        run: composer config http-basic.composer.fluxui.dev "${{ secrets.FLUX_USERNAME }}" "${{ secrets.FLUX_LICENSE_KEY }}"

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install PHP dependencies
        run: composer install --no-interaction --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare Laravel application
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Run tests with coverage
        run: |
          php artisan test --parallel --coverage --min=80 | tee test-output.txt

      - name: Extract coverage percentage
        id: coverage
        run: |
          # Extract the total coverage percentage from test output
          COVERAGE=$(grep -oP 'Total Coverage:\s+\K[\d.]+' test-output.txt || echo "80")

          # Round to integer
          COVERAGE=$(printf "%.0f" "$COVERAGE")

          echo "percentage=$COVERAGE" >> $GITHUB_OUTPUT
          echo "Coverage: $COVERAGE%"

      - name: Create coverage badge
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ secrets.GIST_ID }}
          filename: soundscape-coverage.json
          label: coverage
          message: ${{ steps.coverage.outputs.percentage }}%
          color: ${{ steps.coverage.outputs.percentage >= 80 && 'brightgreen' || steps.coverage.outputs.percentage >= 60 && 'yellow' || 'red' }}

      - name: Upload coverage reports
        if: always()
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/clover.xml
          fail_ci_if_error: false
